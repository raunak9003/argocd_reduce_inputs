{{- range $groupName, $group := dict "apps" .Values.apps }}
  {{- range $appName, $appCfg := $group }}
    {{- if $appCfg.enabled }}
      {{- $fileContent := $.Files.Get (printf "files/%s.yaml" $appName) }}
      {{- $rendered := tpl $fileContent $ }}
      {{- $baseApp := fromYaml $rendered }}

      {{- if $appCfg.injectEnvSpecificOverride }}

        {{/* Override .spec.source.targetRevision */}}
        {{- if hasKey $appCfg "targetRevision" }}
          {{- $spec := get $baseApp "spec" | default (dict) }}
          {{- $source := get $spec "source" | default (dict) }}
          {{- $_ := set $source "targetRevision" $appCfg.targetRevision }}
          {{- $_ := set $spec "source" $source }}
          {{- $_ := set $baseApp "spec" $spec }}
        {{- end }}

        {{/* Override .spec.source.repoURL */}}
        {{- if hasKey $appCfg "repoURL" }}
          {{- $spec := get $baseApp "spec" | default (dict) }}
          {{- $source := get $spec "source" | default (dict) }}
          {{- $_ := set $source "repoURL" $appCfg.repoURL }}
          {{- $_ := set $spec "source" $source }}
          {{- $_ := set $baseApp "spec" $spec }}
        {{- end }}

        {{/* Override .spec.source.path */}}
        {{- if hasKey $appCfg "path" }}
          {{- $spec := get $baseApp "spec" | default (dict) }}
          {{- $source := get $spec "source" | default (dict) }}
          {{- $_ := set $source "path" $appCfg.path }}
          {{- $_ := set $spec "source" $source }}
          {{- $_ := set $baseApp "spec" $spec }}
        {{- end }}

        {{/* Override .spec.source.helm.valueFiles */}}
        {{- if hasKey $appCfg "valueFiles" }}
          {{- $spec := get $baseApp "spec" | default (dict) }}
          {{- $source := get $spec "source" | default (dict) }}
          {{- $helm := get $source "helm" | default (dict) }}
          {{- $_ := set $helm "valueFiles" $appCfg.valueFiles }}
          {{- $_ := set $source "helm" $helm }}
          {{- $_ := set $spec "source" $source }}
          {{- $_ := set $baseApp "spec" $spec }}
        {{- end }}

        {{/* Override .spec.syncWave */}}
        {{- if hasKey $appCfg "syncWave" }}
          {{- $spec := get $baseApp "spec" | default (dict) }}
          {{- $_ := set $spec "syncWave" $appCfg.syncWave }}
          {{- $_ := set $baseApp "spec" $spec }}
        {{- end }}

        {{/* Override .spec.destination.server */}}
        {{- if hasKey $appCfg "server" }}
          {{- $spec := get $baseApp "spec" | default (dict) }}
          {{- $destination := get $spec "destination" | default (dict) }}
          {{- $_ := set $destination "server" $appCfg.server }}
          {{- $_ := set $spec "destination" $destination }}
          {{- $_ := set $baseApp "spec" $spec }}
        {{- end }}

        {{/* Override .spec.destination.namespace */}}
        {{- if hasKey $appCfg "namespace" }}
          {{- $spec := get $baseApp "spec" | default (dict) }}
          {{- $destination := get $spec "destination" | default (dict) }}
          {{- $_ := set $destination "namespace" $appCfg.namespace }}
          {{- $_ := set $spec "destination" $destination }}
          {{- $_ := set $baseApp "spec" $spec }}
        {{- end }}

        {{- /* Override .spec.syncPolicy.automated.selfHeal */}}
        {{- if hasKey $appCfg "selfHeal" }}
          {{- $spec := get $baseApp "spec" | default (dict) }}
          {{- $syncPolicy := get $spec "syncPolicy" | default (dict) }}
          {{- $automated := get $syncPolicy "automated" | default (dict) }}
          {{- $_ := set $automated "selfHeal" $appCfg.selfHeal }}
          {{- $_ := set $syncPolicy "automated" $automated }}
          {{- $_ := set $spec "syncPolicy" $syncPolicy }}
          {{- $_ := set $baseApp "spec" $spec }}
        {{- end }}
        
        {{- /* Override .spec.syncPolicy.syncOptions */}}
        {{- if hasKey $appCfg "syncOptions" }}
          {{- $spec := get $baseApp "spec" | default (dict) }}
          {{- $syncPolicy := get $spec "syncPolicy" | default (dict) }}
          {{- $_ := set $syncPolicy "syncOptions" $appCfg.syncOptions }}
          {{- $_ := set $spec "syncPolicy" $syncPolicy }}
          {{- $_ := set $baseApp "spec" $spec }}
        {{- end }}

      {{- end }}

---
      {{ toYaml $baseApp }}
    {{- end }}
  {{- end }}
{{- end }}
